{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","username","_jsxs","className","children","_jsx","alt","src","concat","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","hasError","_createClass","key","value","error","info","this","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"2OAgBeA,EAdF,SAAHC,GAAqC,IAAhCC,EAAID,EAAJC,KAAMC,EAAKF,EAALE,MAAOC,EAAEH,EAAFG,GAAIC,EAAQJ,EAARI,SAE5B,OACIC,eAAA,OAAKC,UAAW,sDAAqDC,SAAA,CACjEC,cAAA,OAAKC,IAAK,SAASC,IAAG,wBAAAC,OAA0BR,EAAE,cAClDE,eAAA,OAAAE,SAAA,CACIC,cAAA,MAAAD,SAAKN,IACLO,cAAA,MAAAD,SAAKH,IACLI,cAAA,KAAAD,SAAIL,SAIpB,ECUeU,EArBE,SAAHZ,GAAkB,IAAba,EAAMb,EAANa,OAIf,OACIL,cAAA,OAAAD,SAEQM,EAAOC,KAAI,SAACC,EAAMC,GAClB,OAAQR,cAACT,EAAI,CAETI,GAAMU,EAAOG,GAAGb,GAChBF,KAAQY,EAAOG,GAAGf,KAClBG,SAAYS,EAAOG,GAAGZ,SACtBF,MAASW,EAAOG,GAAGd,OAJdW,EAAOG,GAAGb,GAMnB,KAIhB,ECPec,EAbG,SAAHjB,GAAiBA,EAAXkB,YAAgC,IAAnBC,EAAYnB,EAAZmB,aAC9B,OACIX,cAAA,OAAKF,UAAU,MAAKC,SACpBC,cAAA,SACIF,UAAU,mCACVc,KAAO,SACPC,YAAc,gBACdC,SAAYH,KAIxB,ECHeI,G,MARA,SAACC,GACZ,OACIhB,cAAA,OAAKiB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAASrB,SACzEiB,EAAMjB,UAGnB,GCYesB,EAlBI,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACf,SAAAA,EAAYL,GAAO,IAADU,EAIb,OAJaC,YAAA,KAAAN,IACdK,EAAAF,EAAAI,KAAA,KAAMZ,IACDa,MAAQ,CACTC,UAAW,GACdJ,CACL,CASC,OATAK,YAAAV,EAAA,EAAAW,IAAA,oBAAAC,MACD,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEP,UAAW,GAC/B,GAAC,CAAAE,IAAA,SAAAC,MACD,WACI,OAAGG,KAAKP,MAAMC,SACH9B,cAAA,MAAAD,SAAI,qBAERqC,KAAKpB,MAAMjB,QACtB,KAACsB,CAAA,CAfc,CAASiB,aC4CbC,EAvCN,SAAAjB,GAAAC,YAAAgB,EAAAjB,GAAA,IAAAE,EAAAC,YAAAc,GACL,SAAAA,IAAc,IAADb,EAKR,OALQC,YAAA,KAAAY,IACTb,EAAAF,EAAAI,KAAA,OAWJY,eAAiB,SAACC,GACdf,EAAKW,SAAS,CAAE3B,YAAa+B,EAAMC,OAAOT,OAC9C,EAZIP,EAAKG,MAAQ,CACTxB,OAAS,GACTK,YAAc,IACjBgB,CACL,CA6BC,OA7BAK,YAAAQ,EAAA,EAAAP,IAAA,oBAAAC,MACD,WAAoB,IAADU,EAAA,KACfC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,MAAM,IAC9BF,MAAK,SAAAG,GAAK,OAAEL,EAAKN,SAAS,CAAEhC,OAAQ2C,GAAO,GAChD,GAAC,CAAAhB,IAAA,SAAAC,MAID,WACI,IAAAgB,EAA8Bb,KAAKP,MAA5BxB,EAAM4C,EAAN5C,OAAQK,EAAWuC,EAAXvC,YACTwC,EAAiB7C,EAAO8C,QAAQ,SAAAC,GAClC,OAAOA,EAAM3D,KAAK4D,cAAcC,SAAS5C,EAAY2C,cACzD,IACA,OAAIhD,EAAOkD,OAIH1D,eAAA,OAAKC,UAAY,KAAIC,SAAA,CACrBC,cAAA,MAAIF,UAAU,KAAIC,SAAC,gBACnBC,cAACS,EAAS,CAACE,aAAgByB,KAAKI,iBAChCxC,cAACe,EAAM,CAAAhB,SACHC,cAACqB,EAAa,CAAAtB,SACVC,cAACI,EAAQ,CAACC,OAAU6C,WARzBlD,cAAA,MAAAD,SAAI,WAcnB,KAACwC,CAAA,CApCI,CAASD,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,SAAArD,GAAkD,IAA/CmE,EAAMnE,EAANmE,OAAQC,EAAMpE,EAANoE,OAAQC,EAAMrE,EAANqE,OAAQC,EAAMtE,EAANsE,OAAQC,EAAOvE,EAAPuE,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,E,MCAaO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpE,cAACqE,IAAMC,WAAU,CAAAvE,SACfC,cAACuC,EAAG,OAORiB,G","file":"static/js/main.1e8f658f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id, username}) => {\r\n    // const {name, email, id} = props;\r\n    return (\r\n        <div className ='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt ='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <h3>{username}</h3>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    // if(true){\r\n    //     throw new Error('Whats going on!! I do not understand')\r\n    // }\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                return (<Card \r\n                    key={robots[i].id} \r\n                    id = {robots[i].id} \r\n                    name = {robots[i].name} \r\n                    username = {robots[i].username} \r\n                    email = {robots[i].email} \r\n                    />);\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ( {searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n        <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type = 'search' \r\n            placeholder = 'Search Robots'\r\n            onChange = {searchChange} \r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '2px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({ hasError : true})\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>O Stree Kal aana</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>this.setState({ robots: users}))\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value})\r\n    }\r\n    render(){\r\n        const {robots, searchfield} = this.state;        \r\n        const filteredRobots = robots.filter( robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if(!robots.length){\r\n            return <h1>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className = 'tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange = {this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots = {filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n\n// const registerServiceWorker = onPerfEntry => {\n//   if (onPerfEntry && onPerfEntry instanceof Function) {\n//     import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n//       getCLS(onPerfEntry);\n//       getFID(onPerfEntry);\n//       getFCP(onPerfEntry);\n//       getLCP(onPerfEntry);\n//       getTTFB(onPerfEntry);\n//     });\n//   }\n// };\n\n// export default registerServiceWorker;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App';\n// import Card from './Card';\n// import registerServiceWorker from './reportWebVitals'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// registerServiceWorker();"],"sourceRoot":""}